{"version":3,"file":"static/js/576.1f47ad55.chunk.js","mappings":"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","sources":["services/api.js","components/TweetList/TweetersList.styled.jsx","components/CardTweets/TweeterCard.styled.jsx","components/CardTweets/CardTweets.jsx","components/TweetList/TweetList.jsx","pages/Tweets.jsx","pages/pages.styled.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://648dfd0c2de8d0ea11e876b0.mockapi.io';\n\nexport async function getUsers(params) {\n  return await axios.get(`/users`, { params });\n}","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 30px;\n`;\n\nexport const CardWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: flex-start;\n`;\n\nexport const CardList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n\n  row-gap: 30px;\n  column-gap: 38px;\n  list-style: none;\n`;\n\nexport const ButtonsWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: flex-end;\n  width: 100%;\n  gap: 50px;\n`;\n\nexport const Title = styled.h2`\n  text-align: center;\n  font-size: 40px;\n  line-height: 1.5;\n  color: #5736a3;\n`;\n\n\n\nexport const Buttons = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-decoration: none;\n  gap: 10px;\n  width: 196px;\n  height: 50px;\n  padding-top: 5px;\n\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 1.22;\n  background-color: #ebd8ff;\n  color: #5736a3;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n\n  border-radius: 10px;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: #5736a3;\n    color: #ebd8ff;\n    border: 2px solid #d8a331;\n  }\n`;\n\n\nexport const StyledLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 5px;\n  width: 196px;\n  height: 80px;\n  text-align: center;\n  font-size: 18px;\n  font-weight: 600;\n  line-height: 1.22;\n  background-color: #5736a3;\n  color: #ebd8ff;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10px;\n  outline: none;\n`;\n\nexport const StyledSelect = styled.select`\n  padding-left: 5px;\n  font-size: 18px;\n  font-weight: 600;\n  line-height: 1.22;\n  background-color: #ebd8ff;\n  color: #5736a3;\n  border-radius: 10px;\n  outline: none;\n`;","import styled from 'styled-components';\n\n\nexport const Wrapper = styled.div`\n  position: relative;\n  // flex-basis: 380px;\n  height: 480px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n\n  padding: 28px 36px;\n  border-radius: 20px;\n\n  background: linear-gradient(\n    114.99deg,\n    #471ca9 -0.99%,\n    #5736a3 54.28%,\n    #4b2a99 78.99%\n  );\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\n`;\n\nexport const Border = styled.div`\n  position: absolute;\n  top: 214px;\n  left: 0;\n  width: 100%;\n  height: 8px;\n  background: #ebd8ff;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\n    inset 0px -1.71846px 3.43693px #ae7be3, inset 0px 3.43693px 2.5777px #fbf8ff;\n`;\n\nexport const CircleBorder = styled.div`\n  position: absolute;\n  top: 178px;\n  left: 150px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 80px;\n  height: 80px;\n  background: #ebd8ff;\n  box-shadow: 0px 4.39163px 4.39163px rgba(0, 0, 0, 0.06),\n    inset 0px -2.19582px 4.39163px #ae7be3,\n    inset 0px 4.39163px 3.29372px #fbf8ff;\n  border-radius: 50%;\n`;\n\nexport const InsideCircleBorder = styled.div`\n  width: 62px;\n  height: 62px;\n  background: #5736a3;\n  border-radius: 50%;\n`;\n\nexport const StyledAvatar = styled.img`\n  border-radius: 50%;\n`;\n\n\n\nexport const LogoGoit = styled.div`\n  position: absolute;\n  top: 20px;\n  left: 20px;\n`;\n\nexport const ContentWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  font-style: normal;\n  color: #ebd8ff;\n  font-size: 20px;\n  line-height: 1.2;\n  text-transform: uppercase;\n`;\n\nexport const UserName = styled.span`\n  margin-bottom: 16px;\n`;\n\nexport const TweetsQuantity = styled.span`\n  margin-bottom: 16px;\n`;\n\nexport const FollowersQuantity = styled.span`\n  margin-bottom: 26px;\n`;\n\nexport const FollowBtn = styled.button`\n  width: 196px;\n  height: 50px;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 1.22;\n\n  color: #373737;\n  background-color: ${props =>\n    props[`data-following`] ? '#5CD3A8' : '#ebd8ff'};\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border: none;\n  outline: none;\n  border-radius: 10px;\n  cursor: pointer;\n`;","import logo from 'images/goit-logo.png';\nimport Logotype from 'components/Logo/Logo'\nimport {\n  Wrapper,\n  Border,\n  CircleBorder,\n  InsideCircleBorder,\n  LogoGoit,\n  ContentWrapper,\n  UserName,\n  TweetsQuantity,\n  FollowersQuantity,\n  FollowBtn,\n  StyledAvatar,\n} from './TweeterCard.styled';\n\nexport default function UserCard({\n  id,\n  user,\n  tweets,\n  followers,\n  avatar,\n  setFollowing,\n  isFollowing,\n}) {\n  const numberOfNextFollowers = (isFollowing ? 1 : 0) + followers;\n  const tweetsQuantity = tweets.toLocaleString('en-EN');\n  const numberOfFollowers = numberOfNextFollowers.toLocaleString('en-EN');\n\n  return (\n    <Wrapper>\n      <Border />\n      <CircleBorder>\n        <InsideCircleBorder>\n          <StyledAvatar src={avatar} width=\"62\" height=\"62\" alt=\"user\" />\n        </InsideCircleBorder>\n      </CircleBorder>\n      <LogoGoit>\n        <img src={logo} width=\"76\" height=\"22\" alt=\"logo\" />\n      </LogoGoit>\n      <Logotype />\n      <ContentWrapper>\n        <UserName>\n          <strong>{user}</strong>\n        </UserName>\n        <TweetsQuantity>{tweetsQuantity} Tweets</TweetsQuantity>\n        <FollowersQuantity>{numberOfFollowers} Followers</FollowersQuantity>\n        <FollowBtn\n          type=\"button\"\n          onClick={() => setFollowing(id)}\n          data-following={isFollowing}\n        >\n          {isFollowing ? 'Following' : 'Follow'}\n        </FollowBtn>\n      </ContentWrapper>\n    </Wrapper>\n  );\n}","import { useState, useEffect } from 'react';\nimport { useRef } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getUsers } from 'services/api';\n\nimport {\n  CardWrapper,\n  CardList,\n  Wrapper,\n  ButtonsWrapper,\n  Buttons,\n  \n} from './TweetersList.styled';\n\nimport UserCard from 'components/CardTweets/CardTweets';\n\nexport default function TweetsList() {\n  const [noFilterResult, setNoFilterResult] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [params, setParams] = useState({ page: 1, limit: 3 });\n  const [searchParams, setSearchParams] = useSearchParams();\n  const loadMoreButtonRef = useRef(null);\n  const [filter] = useState('show all');\n  const [following, setFollowing] = useState(() => {\n    const localStorFollowing = JSON.parse(localStorage.getItem(`following`));\n    return localStorFollowing ? localStorFollowing : {};\n  });\n\n  useEffect(() => {\n    setSearchParams({ page: 1, limit: params.limit });\n    (async () => {\n      try {\n        const response = await getUsers(params);\n        setUsers([...response.data]);\n      } catch (error) {\n    alert('Sorry, something goes wrong');\n      }\n    })();\n  }, [searchParams, setSearchParams, params]);\n\n  useEffect(() => {\n    loadMoreButtonRef.current.scrollIntoView({ behavior: 'smooth' });\n  }, [users]);\n\n  useEffect(() => {\n    if (!noFilterResult) {\n      setTimeout(() => setNoFilterResult(true), 3000);\n    }\n  }, [noFilterResult]);\n\n  const loadMoreHandler = () => {\n    setParams(prevState =>\n      prevState.limit < 10\n        ? { ...prevState, limit: prevState.limit + 3 }\n        : prevState\n    );\n  };\n\n\n\n  const followingHandler = id => {\n    setFollowing(prevState => ({\n      ...prevState,\n      [id]: prevState[id] ? !prevState[id] : true,\n    }));\n  };\n\n  const getFilteredTweeterUser = () => {\n    switch (filter) {\n      case 'follow':\n        return users.filter(user => following[user.id] !== true);\n      case 'followings':\n        return users.filter(user => following[user.id] === true);\n      default:\n        return users;\n    }\n  };\n  const filteredTweeterUser = getFilteredTweeterUser();\n\n  localStorage.setItem(`following`, JSON.stringify(following));\n  \n\n  return (\n    <Wrapper> \n        <CardWrapper>\n          <CardList>\n            {filteredTweeterUser.map(users => {\n              const { id, user,avatar, tweets, followers } = users;\n              const isFollowing = following[id] ? following[id] : false;\n              return (\n                <UserCard\n                  key={id}\n                  id={id}\n                  user={user}\n                  avatar={avatar}\n                  tweets={tweets}\n                  followers={followers}\n                  setFollowing={followingHandler}\n                  isFollowing={isFollowing}\n                />\n              );\n            })}\n          </CardList>\n        </CardWrapper>\n      <ButtonsWrapper>\n        <Buttons to=\"/\">\n          Back\n        </Buttons>\n        <Buttons\n          type=\"buttons\"\n          ref={loadMoreButtonRef}\n          onClick={loadMoreHandler}\n        >\n          Load more\n        </Buttons>\n      </ButtonsWrapper>\n    </Wrapper>\n  );\n}","import { Wrapper, StyledSection } from './pages.styled';\nimport { StyledContainer } from 'components/Header/Header.styled';\nimport TweetList from 'components/TweetList/TweetList';\nfunction Container({ children }) {\n  return <StyledContainer>{children}</StyledContainer>;\n}\n\n function Section({ children }) {\n  return <StyledSection>{children}</StyledSection>;\n}\nexport default function Tweets() {\n  return (\n    <Wrapper>\n      <Section>\n        <Container>\n          <TweetList />\n        </Container>\n      </Section>\n    </Wrapper>\n  );\n}","import styled from 'styled-components';\n\n\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\nexport const StyledSection = styled.div`\n  padding: 10px 0;\n\n  @media screen and (min-width: 480px) {\n    padding: 20px 0;\n  }\n`;"],"names":["getUsers","params","axios","Wrapper","styled","CardWrapper","CardList","ButtonsWrapper","Buttons","Link","Border","CircleBorder","InsideCircleBorder","StyledAvatar","LogoGoit","ContentWrapper","UserName","TweetsQuantity","FollowersQuantity","FollowBtn","props","UserCard","id","user","tweets","followers","avatar","setFollowing","isFollowing","numberOfNextFollowers","tweetsQuantity","toLocaleString","numberOfFollowers","src","width","height","alt","Logo","type","onClick","TweetsList","useState","noFilterResult","setNoFilterResult","users","setUsers","page","limit","setParams","useSearchParams","searchParams","setSearchParams","loadMoreButtonRef","useRef","filter","localStorFollowing","JSON","parse","localStorage","getItem","following","useEffect","response","data","alert","current","scrollIntoView","behavior","setTimeout","followingHandler","prevState","filteredTweeterUser","getFilteredTweeterUser","setItem","stringify","map","to","ref","Container","children","Section","Tweets","StyledSection"],"sourceRoot":""}